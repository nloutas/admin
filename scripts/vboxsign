#!/bin/bash

# see also https://gist.github.com/gabrieljcs/68939c7eeadfabfdbc6b40100130270d
# Sign and load VirtualBox modules (Ubuntu 16.04 edition)

# Run as root
[ "`whoami`" = root ] || exec sudo "$0" "$@"

# Set working directory to be the directory that the script is located in
cd "$(dirname "$0")"

# (Optional) Setting env KBUILD_SIGN_PIN for encrypted keys
#printf "Please enter key passphrase (leave blank if not needed): "; read -s
#export KBUILD_SIGN_PIN="$REPLY"

if [ ! -f ./MOK.der ]; then
  echo "Generating Machine Owner Key!"
  # create keys with openssl
  openssl req -new -x509 -newkey rsa:2048 -keyout MOK.priv -outform DER -out MOK.der -nodes -days 36500 -subj "/CN=VirtualBox Modules Cert/"
  chmod 600 MOK.priv

  # Add MOK to shim.
  echo "Sign Machine Owner Key to shim! Note the passphrase you give. Reboot and following the menu, enroll the key with given passphrase."
  mokutil --import MOK.der
else
  echo "Machine Owner Key exists! Sign and load vbox modules"

  for module in vboxdrv vboxnetflt vboxnetadp vboxpci; do
    [ "`hexdump -e '"%_p"' $(modinfo -n $module) | tail | grep signature`" ] && echo -e "\e[93mModule $module is already signed. Skipping.\e[0m" || /usr/src/linux-headers-$(uname -r)/scripts/sign-file sha256 ./MOK.priv ./MOK.der $(modinfo -n $module)
    printf "$module: "
    echo `hexdump -e '"%_p"' $(modinfo -n $module) | tail | grep signature`
    # this will fail, untill the key enrollment after reboot is performed successfully
    modprobe $module && echo -e "\e[92m$module successfully loaded\e[0m" || echo -e "\e[91mFailed to load $module\e[0m"
  done

  # Optional: Shred MOK keys?
  #shred -vfuz MOK.*
fi

